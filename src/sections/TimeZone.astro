---
import Card from "@components/Card.astro";

import { formatWeekday, formatDate, formatTime } from "@lib/timeZone";

interface Props {
  class?: string;
}
---

<Card class:list={["space-y-1 flex flex-col", Astro.props.class]}>
  <h4 class="font-medium text-lg md:text-xl">Zona Horaria</h4>
  <span class="text-sm opacity-60 md:text-base">Cusco, PerÃº ðŸ‡µðŸ‡ª</span>
  <time class="text-3xl font-bold py-2 text-mauve-400" id="time">
    {formatTime(new Date())}
  </time>
  <section class="md:text-lg">
    <span id="weekday">
      {formatWeekday(new Date())}
    </span>,
    <span id="date">
      {formatDate(new Date())}
    </span>
  </section>
</Card>

<script>
  const d = document;

  setInterval(() => {
    const weekday = d.getElementById("weekday");
    const date = d.getElementById("date");
    const time = d.getElementById("time");

    if (weekday && date && time) {
      const now = new Date();

      const weekdayOptions: Intl.DateTimeFormatOptions = {
        weekday: "long",
        timeZone: "America/Lima",
      };

      const dateOptions: Intl.DateTimeFormatOptions = {
        day: "numeric",
        month: "long",
        year: "numeric",
        timeZone: "America/Lima",
      };

      const timeOptions: Intl.DateTimeFormatOptions = {
        hour: "numeric",
        minute: "numeric",
        second: "numeric",
        hour12: true,
        timeZone: "America/Lima",
      };

      const formattedWeekday = new Intl.DateTimeFormat(
        "es-PE",
        weekdayOptions,
      ).format(now);

      const formattedDate = new Intl.DateTimeFormat(
        "es-PE",
        dateOptions,
      ).format(now);

      const formattedTime = new Intl.DateTimeFormat(
        "es-PE",
        timeOptions,
      ).format(now);

      weekday.textContent = formattedWeekday;
      date.textContent = formattedDate;
      time.textContent = formattedTime;
    }
  }, 1000);
</script>
