---
import SpainFlag from "@/flags/Spain.astro";
import UnitedStatesFlag from "@/flags/UnitedStates.astro";

import ChevronDown from "@/icons/ChevronDown.astro";

const { currentLocale = "es", url } = Astro;

const pathname = url.pathname;

let restUrl;

if (pathname.startsWith("/en")) {
  const segments = pathname.split("/").slice(2);
  restUrl = "/" + segments.join("/").replace(/\/+$/, "");
} else {
  restUrl = pathname.replace(/\/+$/, "");
}

const LOCALES: Record<
  string,
  { code: string; name: string; href: string; flag: typeof SpainFlag }
> = {
  es: {
    code: "es",
    href: restUrl,
    name: "ES",
    flag: SpainFlag,
  },
  en: {
    code: "en",
    href: `/en${restUrl}`,
    name: "EN",
    flag: UnitedStatesFlag,
  },
};

const currentLocaleData = LOCALES[currentLocale];
const otherLocales = Object.values(LOCALES).filter(
  (locale) => locale.code !== currentLocale,
);
const currentPath = url.pathname.replace(currentLocaleData.href, "");
---

<section class="lang-selector">
  <a class="lang-selector-button" aria-expanded="true" aria-haspopup="true">
    <currentLocaleData.flag />
    {currentLocaleData.name}
    <ChevronDown width="18" heght="18" />
  </a>
  <ul>
    {
      otherLocales.map(({ href, name, flag }) => (
        <li>
          <a class="lang-selector-button" href={`${href}${currentPath}`}>
            <flag />
            {name}
          </a>
        </li>
      ))
    }
  </ul>
</section>

<style>
  .lang-selector {
    font-size: 14px;
    position: relative;
    border-radius: 4px;
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }

  .lang-selector ul {
    width: 100%;
    display: none;
    position: absolute;
    padding-top: 4px;
  }

  .lang-selector:hover ul {
    display: block;
    animation: fade-down 300ms ease-in-out;
  }

  .lang-selector-button {
    width: 100%;
    display: inline-flex;
    align-items: center;
    column-gap: 8px;
    padding: 6px 10px;
    border-radius: 4px;
    background-color: rgb(14 165 233 / 0.04);
    backdrop-filter: blur(10px);
    border: 1px solid transparent;
  }

  .lang-selector-button:hover {
    background-color: rgb(14 165 233 / 0.1);
    border: 1px solid rgb(14 165 233 / 0.2);
    color: rgb(14 165 233);
    text-shadow: 0 0 2px rgb(14, 165, 233);
  }

  @keyframes fade-down {
    0% {
      opacity: 0;
      transform: translateY(-5px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
